; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33523.0 

	TITLE	C:\Users\olafj\Desktop\Studies\SEMESTER III\Computer Architecture\Lab_5\Lab_5\Debug\Source.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__FE09AF47_concurrencysal@h DB 01H
__C073CA79_sal@h DB 01H
__D6AFE870_vadefs@h DB 01H
__D63E96CF_vcruntime@h DB 01H
__04C75F1C_corecrt@h DB 01H
__C44F8F6B_corecrt_stdio_config@h DB 01H
__A7F89B2B_corecrt_wstdio@h DB 01H
__B5C48800_stdio@h DB 01H
__EB7A6BE8_Source@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BB@JAHHCLHM@x1?5?$DN?5?$CFf?0?5x2?5?$DN?5?$CFf@ ; `string'
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4044000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c02e000000000000
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_srednia_harm:PROC
EXTRN	_new_exp:PROC
EXTRN	_kula:PROC
EXTRN	_quadratic_eq:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT __real@c02e000000000000
CONST	SEGMENT
__real@c02e000000000000 DQ 0c02e000000000000r	; -15
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BB@JAHHCLHM@x1?5?$DN?5?$CFf?0?5x2?5?$DN?5?$CFf@
CONST	SEGMENT
??_C@_0BB@JAHHCLHM@x1?5?$DN?5?$CFf?0?5x2?5?$DN?5?$CFf@ DB 'x1 = %f, x2 = '
	DB	'%f', 00H					; `string'
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	022H
	DW	014aH
voltbl	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\olafj\Desktop\Studies\SEMESTER III\Computer Architecture\Lab_5\Lab_5\Source.c
;	COMDAT _main
_TEXT	SEGMENT
_c$ = -80						; size = 8
_x$ = -64						; size = 8
_srednia$ = -48						; size = 4
_n$ = -36						; size = 4
_tab$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d ac	 lea	 edi, DWORD PTR [ebp-84]
  0000f	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET __EB7A6BE8_Source@c
  0002a	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 10   : 	
; 11   : 	double tab[] = { 0, 0 };

  0002f	0f 57 c0	 xorps	 xmm0, xmm0
  00032	f2 0f 11 45 e8	 movsd	 QWORD PTR _tab$[ebp], xmm0
  00037	0f 57 c0	 xorps	 xmm0, xmm0
  0003a	f2 0f 11 45 f0	 movsd	 QWORD PTR _tab$[ebp+8], xmm0

; 12   : 	int n = 3;

  0003f	c7 45 dc 03 00
	00 00		 mov	 DWORD PTR _n$[ebp], 3

; 13   : 	float srednia = srednia_harm(tab, n);

  00046	8b 45 dc	 mov	 eax, DWORD PTR _n$[ebp]
  00049	50		 push	 eax
  0004a	8d 4d e8	 lea	 ecx, DWORD PTR _tab$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _srednia_harm
  00053	83 c4 08	 add	 esp, 8
  00056	d9 5d d0	 fstp	 DWORD PTR _srednia$[ebp]

; 14   : 	double x = new_exp(3.0);

  00059	83 ec 08	 sub	 esp, 8
  0005c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4008000000000000
  00064	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00069	e8 00 00 00 00	 call	 _new_exp
  0006e	83 c4 08	 add	 esp, 8
  00071	dd 5d c0	 fstp	 QWORD PTR _x$[ebp]

; 15   : 	double c = kula(40.0, 0.5, 4.0, 5.0);

  00074	83 ec 08	 sub	 esp, 8
  00077	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4014000000000000
  0007f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00084	83 ec 08	 sub	 esp, 8
  00087	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4010000000000000
  0008f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00094	83 ec 08	 sub	 esp, 8
  00097	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0009f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a4	83 ec 08	 sub	 esp, 8
  000a7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4044000000000000
  000af	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b4	e8 00 00 00 00	 call	 _kula
  000b9	83 c4 20	 add	 esp, 32			; 00000020H
  000bc	dd 5d b0	 fstp	 QWORD PTR _c$[ebp]

; 16   : 	quadratic_eq(2.0, -1.0, -15.0, tab);

  000bf	8d 45 e8	 lea	 eax, DWORD PTR _tab$[ebp]
  000c2	50		 push	 eax
  000c3	83 ec 08	 sub	 esp, 8
  000c6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c02e000000000000
  000ce	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000d3	83 ec 08	 sub	 esp, 8
  000d6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bff0000000000000
  000de	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e3	83 ec 08	 sub	 esp, 8
  000e6	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4000000000000000
  000ee	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f3	e8 00 00 00 00	 call	 _quadratic_eq
  000f8	83 c4 1c	 add	 esp, 28			; 0000001cH

; 17   : 	
; 18   : 
; 19   : 	printf("x1 = %f, x2 = %f", tab[0], tab[1]);

  000fb	b8 08 00 00 00	 mov	 eax, 8
  00100	c1 e0 00	 shl	 eax, 0
  00103	83 ec 08	 sub	 esp, 8
  00106	f2 0f 10 44 05
	e8		 movsd	 xmm0, QWORD PTR _tab$[ebp+eax]
  0010c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00111	b9 08 00 00 00	 mov	 ecx, 8
  00116	6b d1 00	 imul	 edx, ecx, 0
  00119	83 ec 08	 sub	 esp, 8
  0011c	f2 0f 10 44 15
	e8		 movsd	 xmm0, QWORD PTR _tab$[ebp+edx]
  00122	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JAHHCLHM@x1?5?$DN?5?$CFf?0?5x2?5?$DN?5?$CFf@
  0012c	e8 00 00 00 00	 call	 _printf
  00131	83 c4 14	 add	 esp, 20			; 00000014H

; 20   : 	//printf("29001.088983");
; 21   : 	//printf("56993, 8188772");
; 22   : 	
; 23   : 
; 24   : 	return 0;

  00134	33 c0		 xor	 eax, eax

; 25   : }

  00136	52		 push	 edx
  00137	8b cd		 mov	 ecx, ebp
  00139	50		 push	 eax
  0013a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@main
  00140	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00145	58		 pop	 eax
  00146	5a		 pop	 edx
  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx
  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	33 cd		 xor	 ecx, ebp
  0014f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00154	81 c4 14 01 00
	00		 add	 esp, 276		; 00000114H
  0015a	3b ec		 cmp	 ebp, esp
  0015c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c3		 ret	 0
  00165	0f 1f 00	 npad	 3
$LN5@main:
  00168	01 00 00 00	 DD	 1
  0016c	00 00 00 00	 DD	 $LN4@main
$LN4@main:
  00170	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00174	10 00 00 00	 DD	 16			; 00000010H
  00178	00 00 00 00	 DD	 $LN3@main
$LN3@main:
  0017c	74		 DB	 116			; 00000074H
  0017d	61		 DB	 97			; 00000061H
  0017e	62		 DB	 98			; 00000062H
  0017f	00		 DB	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 956  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d e8	 lea	 edi, DWORD PTR [ebp-24]
  0000f	b9 06 00 00 00	 mov	 ecx, 6
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __B5C48800_stdio@h
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);

  00025	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00028	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  0002b	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002e	50		 push	 eax
  0002f	6a 00		 push	 0
  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00034	51		 push	 ecx
  00035	8b f4		 mov	 esi, esp
  00037	6a 01		 push	 1
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  0003f	83 c4 04	 add	 esp, 4
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 __vfprintf_l
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 961  :         __crt_va_end(_ArgList);

  00055	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 962  :         return _Result;

  0005c	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 963  :     }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 644  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __B5C48800_stdio@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00021	8b f4		 mov	 esi, esp
  00023	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  0002e	52		 push	 edx
  0002f	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003b	51		 push	 ecx
  0003c	8b 10		 mov	 edx, DWORD PTR [eax]
  0003e	52		 push	 edx
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  00045	83 c4 18	 add	 esp, 24			; 00000018H
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 646  :     }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __C44F8F6B_corecrt_stdio_config@h
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00021	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
