Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Page     1-1


       1				.386 
       2 0000				rozkazy SEGMENT use16 
       3				ASSUME CS:rozkazy 
       4				; procedura obsługi przerwania zegarow
					ego 
       5 0000				    obsluga_zegara PROC 
       6 0000  50			        push ax 
       7 0001  53			        push bx 
       8 0002  06			        push es 
       9 0003  51			        push cx 
      10 0004  57			        push di 
      11				 
      12 0005  B9 0015			        mov cx, 21 
      13 0008  B8 B800			        mov ax, 0B800h ;adres pamieci e
					kranu 
      14 000B  8E C0			        mov es, ax 
      15				 
      16 000D  B0 03			        mov al, 03h 
      17 000F  B4 10			        mov ah, 10H 
      18 0011  CD 10			        int 10h 
      19 0013  BF 0000			        mov di, 0 
      20				 
      21 0016  E4 60			        in al, 60h 
      22 0018  3C 11			        cmp al, 17 ; w 
      23 001A  0F 84 0033 R		        je here 
      24 001E  3C 1F			        cmp al, 31 ;s 
      25 0020  0F 84 0033 R		        je here 
      26 0024  3C 20			        cmp al, 32 ;a 
      27 0026  0F 84 0033 R		        je here 
      28 002A  3C 1E			        cmp al, 30 ;d 
      29 002C  0F 84 0033 R		        je here 
      30 0030  E9 00E4 R		        jmp stop 
      31				         
      32 0033				        here: 
      33 0033				        move: 
      34 0033  2E: 8B 9D 00F8 R		        mov bx, word ptr cs:[body_table
					 + di] 
      35 0038  26: C6 07 2A		        mov byte PTR es:[bx], '*'  
      36 003C  26: C6 47 01 9E		        mov byte PTR es:[bx+1], 1001111
					0B ;  
      37 0041  26: C6 87 00A0 2A	         mov byte PTR es:[bx+160], '*' 
					 
      38 0047  26: C6 87 00A1 9E	        mov byte PTR es:[bx+161], 10011
					110B ;  
      39 004D  83 C7 02			        add di, 2 
      40 0050  2E: 3B 3E 00F6 R		        cmp di, cs:body_size 
      41 0055  72 DC			        jb move 
      42				 
      43				        ; zmienna 'licznik' zawiera adr
					es biezacy w pamieci ekranu 
      44 0057  2E: 8B 1E 00FA R		        mov bx, word ptr cs:[body_table
					 + 2] 
      45 005C  26: C6 07 2A		        mov byte PTR es:[bx], '*'  
      46 0060  26: C6 47 01 00		        mov byte PTR es:[bx+1], 0000000
Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Page     1-2


					0B ;  
      47 0065  26: C6 87 00A0 2A	          mov byte PTR es:[bx+160], '*'
					  
      48 006B  26: C6 87 00A1 00	        mov byte PTR es:[bx+161], 00000
					000B ;  
      49				        ;<==============MOVE===========
					======> 
      50				        
      51				 
      52 0071  2E: 8B 1E 00F8 R		        mov bx, word ptr cs:[body_table
					] 
      53 0076  2E: 89 1E 00FA R		        mov word ptr cs:[body_table + 2
					], bx 
      54				 
      55 007B  2E: 80 3E 00FE R 77	        cmp cs:direction, 'w' 
      56 0081  0F 85 009F R		        jne notw 
      57 0085  2E: 81 2E 00F8 R 00A0	        sub word ptr cs:body_table, 160
					 
      58 008C  2E: 83 3E 00F8 R 00	        cmp word ptr cs:body_table, 0 
      59 0092  0F 87 009F R		        ja notw 
      60 0096  2E: C6 06 0100 R 01	        mov byte ptr cs:is_killed, 1 
      61 009C  EB 46 90			        jmp stop 
      62				 
      63 009F				        notw: 
      64				 
      65 009F  2E: 80 3E 00FE R 73	         cmp cs:direction, 's' 
      66 00A5  0F 85 00C4 R		        jne nots 
      67 00A9  2E: 81 06 00F8 R 00A0	        add word ptr cs:body_table, 160
					 
      68 00B0  2E: 81 3E 00F8 R 0FA0	        cmp word ptr cs:body_table, 400
					0 
      69 00B7  0F 82 00C4 R		        jb nots 
      70 00BB  2E: C6 06 0100 R 01	        mov byte ptr cs:is_killed, 1 
      71 00C1  EB 21 90			        jmp stop 
      72 00C4				        nots: 
      73				 
      74 00C4  2E: 80 3E 00FE R 64	         cmp cs:direction, 'd' 
      75 00CA  0F 85 00D4 R		        jne notd 
      76 00CE  2E: 83 06 00F8 R 02	        add word ptr cs:body_table, 2 
      77 00D4				        notd: 
      78				 
      79 00D4  2E: 80 3E 00FE R 61	         cmp cs:direction, 'a' 
      80 00DA  0F 85 00E4 R		        jne nota 
      81 00DE  2E: 83 2E 00F8 R 02	        sub word ptr cs:body_table, 2 
      82 00E4				        nota: 
      83 00E4				        stop: 
      84 00E4  5F			        pop di 
      85 00E5  59			        pop cx 
      86 00E6  07			        pop es 
      87 00E7  5B			        pop bx 
      88 00E8  58			        pop ax 
      89				        
      90 00E9  2E: FF 2E 00F0 R		        jmp dword PTR cs:wektor8  ; sko
					k do oryginalnej procedury obslugi prze
Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Page     1-3


					rwania zegarowego 
      91 00EE  0140			        licznik dw 320 ; wyswietla od 2
					 wiersza 
      92 00F0  ????????			        wektor8 dd ? ; kod powrotu 
      93 00F4  0014			        timer dw 20 
      94 00F6  0004			        body_size dw 4 
      95 00F8  0002 0004 0006		        body_table dw 2,4,6 
      96 00FE  ??			        direction db ? 
      97 00FF  ??			        move_direction db ? 
      98 0100  00			        is_killed db 0 
      99				         
     100 0101				    obsluga_zegara ENDP 
     101				    ;==================================
					========================== 
     102 0101				    zacznij: 
     103 0101  B0 00			        mov al, 0 ; video mode 
     104 0103  B4 05			        mov ah, 5 
     105 0105  CD 0A			        int 10 
     106				 
     107 0107  B8 0000			        mov ax, 0 
     108 010A  8E D8			        mov ds,ax ; zerowanie rejestru 
					DS 
     109 010C  66| A1 0020		        mov eax,ds:[32] ; adres fizyczn
					y 0*16 + 32 = 32 
     110 0110  2E: 66| A3 00F0 R	        mov cs:wektor8, eax 
     111				 
     112				        ; wpisanie do wektora nr 8 adre
					su procedury 'obsluga_zegara' 
     113 0115  B8 ---- R		        mov ax, SEG obsluga_zegara ; cz
					ęść segmentowa adresu 
     114 0118  BB 0000 R		        mov bx, OFFSET obsluga_zegara ;
					 offset adresu 
     115				 
     116 011B  FA			        cli  
     117				        ; zapisanie adresu procedury do
					 wektora nr 8 
     118 011C  89 1E 0020		        mov ds:[32], bx  
     119 0120  A3 0022			        mov ds:[34], ax  
     120 0123  FB			        sti  
     121				 
     122				        ; oczekiwanie na naciśnięcie 
					klawisza 'x' 
     123 0124				        aktywne_oczekiwanie: 
     124 0124  2E: 80 3E 0100 R 01	            cmp cs:is_killed, 00000001b
					 
     125 012A  0F 84 0140 R		            je killed 
     126 012E  B4 01			            mov ah,1 
     127 0130  CD 16			            int 16H ; funkcja INT 16H (
					AH=1) BIOSu ustawia ZF=1 jeśli naciśn
					ięto jakiś klawisz 
     128 0132  74 F0			            jz aktywne_oczekiwanie 
     129 0134  B4 00			            mov ah, 0 
     130 0136  CD 16			            int 16H ; odczytanie kodu A
					SCII naciśniętego klawisza (INT 16H, 
Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Page     1-4


					AH=0) do rejestru AL 
     131 0138  2E: A2 00FE R		            mov cs:direction, al 
     132 013C  3C 78			            cmp al, 'x' ; porównanie z
					 kodem litery 'x' 
     133 013E  75 E4			            jne aktywne_oczekiwanie ; s
					kok, gdy inny znak 
     134 0140				        killed: 
     135 0140  2E: 66| A1 00F0 R	        mov eax, cs:wektor8 ;odtworzeni
					e oryginalnej zawartości wektora nr 8 
     136				 
     137 0145  FA			        cli 
     138 0146  66| A3 0020		        mov ds:[32], eax ; przesłanie 
					wartości oryginalnej do wektora 8 w ta
					blicy wektorów przerwań <==> cli i st
					i zabezpiecza p
     139 014A  FB			        sti 
     140				 
     141				        
     142				        ;przerwanie programu i zwrócen
					ie kontroli do programu wywołującego 
     143 014B  B0 00			        mov al, 0 
     144 014D  B4 4C			        mov ah, 4CH 
     145 014F  CD 21			        int 21H 
     146				 
     147 0151				rozkazy ENDS 
     148 0000				        nasz_stos SEGMENT stack 
     149 0000  0080[			          db 128 dup (?) 
     150	    ??			
     151			 ]	
     152				
     153 0080				        nasz_stos ENDS 
     154				    END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	0151	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	0124	ROZKAZY

BODY_SIZE  . . . . . . . . . . .  	L WORD	00F6	ROZKAZY
BODY_TABLE . . . . . . . . . . .  	L WORD	00F8	ROZKAZY

DIRECTION  . . . . . . . . . . .  	L BYTE	00FE	ROZKAZY

HERE . . . . . . . . . . . . . .  	L NEAR	0033	ROZKAZY

IS_KILLED  . . . . . . . . . . .  	L BYTE	0100	ROZKAZY

KILLED . . . . . . . . . . . . .  	L NEAR	0140	ROZKAZY

LICZNIK  . . . . . . . . . . . .  	L WORD	00EE	ROZKAZY

MOVE . . . . . . . . . . . . . .  	L NEAR	0033	ROZKAZY
MOVE_DIRECTION . . . . . . . . .  	L BYTE	00FF	ROZKAZY

NOTA . . . . . . . . . . . . . .  	L NEAR	00E4	ROZKAZY
NOTD . . . . . . . . . . . . . .  	L NEAR	00D4	ROZKAZY
NOTS . . . . . . . . . . . . . .  	L NEAR	00C4	ROZKAZY
NOTW . . . . . . . . . . . . . .  	L NEAR	009F	ROZKAZY

OBSLUGA_ZEGARA . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0101

STOP . . . . . . . . . . . . . .  	L NEAR	00E4	ROZKAZY

TIMER  . . . . . . . . . . . . .  	L WORD	00F4	ROZKAZY

WEKTOR8  . . . . . . . . . . . .  	L DWORD	00F0	ROZKAZY

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	0101	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  snake		

Microsoft (R) Macro Assembler Version 5.00                  1/12/24 11:58:57
                                                             Symbols-2



    151 Source  Lines
    151 Total   Lines
     23 Symbols

  50370 + 449790 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
