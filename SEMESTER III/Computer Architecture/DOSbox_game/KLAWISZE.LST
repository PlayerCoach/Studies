Microsoft (R) Macro Assembler Version 5.00                  1/10/24 22:30:23
                                                             Page     1-1


       1				.386 
       2 0000				rozkazy SEGMENT use16 
       3				ASSUME CS:rozkazy 
       4				; podprogram 'wyswietl_AL' wy≈õwietla z
					awarto≈õƒá rejestru AL 
       5				; w postaci liczby dziesiƒôtnej bez zna
					ku 
       6 0000				wyswietl_AL PROC 
       7				; wy≈õwietlanie zawarto≈õci rejestru AL
					 na ekranie wg adresu 
       8				; podanego w ES:BX 
       9				; stosowany jest bezpo≈õredni zapis do 
					pamiƒôci ekranu 
      10				; przechowanie rejestr√≥w 
      11 0000  50			push ax 
      12 0001  51			push cx 
      13 0002  52			push dx 
      14 0003  B1 0A			mov cl, 10 ; dzielnik 
      15				 
      16 0005  B4 00			mov ah, 0 ; zerowanie starszej czƒô≈õci
					 dzielnej 
      17				; dzielenie liczby w AX przez liczbƒô w
					 CL, iloraz w AL, 
      18				; reszta w AH (tu: dzielenie przez 10) 
      19 0007  F6 F1			div cl 
      20 0009  80 C4 30			add ah, 30H ; zamiana na kod ASCII 
      21 000C  26: 88 67 04		mov es:[bx+4], ah ; cyfra jedno≈õci 
      22 0010  B4 00			mov ah, 0 
      23 0012  F6 F1			div cl ; drugie dzielenie przez 10 
      24 0014  80 C4 30			add ah, 30H ; zamiana na kod ASCII 
      25 0017  26: 88 67 02		mov es:[bx+2], ah ; cyfra dziesiƒÖtek 
      26 001B  04 30			add al, 30H ; zamiana na kod ASCII 
      27 001D  26: 88 07		mov es:[bx+0], al ; cyfra setek 
      28				; wpisanie kodu koloru (intensywny bia≈
					Çy) do pamiƒôci ekranu 
      29 0020  B0 0F			mov al, 00001111B 
      30 0022  26: 88 47 01		mov es:[bx+1],al 
      31 0026  26: 88 47 03		mov es:[bx+3],al 
      32 002A  26: 88 47 05		mov es:[bx+5],al 
      33				; odtworzenie rejestr√≥w 
      34 002E  5A			pop dx 
      35 002F  59			pop cx 
      36 0030  58			pop ax 
      37 0031  C3			ret ; wyj≈õcie z podprogramu 
      38 0032				wyswietl_AL ENDP 
      39				 
      40 0032				    obsluga_przerwan PROC 
      41 0032  50			        push ax 
      42 0033  53			        push bx 
      43 0034  06			        push es 
      44 0035  51			        push cx 
      45				 
      46 0036  B8 B800			        mov ax, 0B800h ;adres pamieci e
					kranu 
Microsoft (R) Macro Assembler Version 5.00                  1/10/24 22:30:23
                                                             Page     1-2


      47 0039  8E C0			        mov es, ax 
      48				        ; zmienna 'licznik' zawiera adr
					es biezacy w pamieci ekranu 
      49 003B  E4 60			        in al, 60h 
      50 003D  E8 0000 R		        call wyswietl_AL 
      51				        ; zwiƒôkszenie o 2 adresu bie≈º
					ƒÖcego w pamiƒôci ekranu 
      52				        
      53				 
      54 0040  59			        pop cx 
      55 0041  07			        pop es 
      56 0042  5B			        pop bx 
      57 0043  58			        pop ax 
      58				        
      59 0044  2E: FF 2E 0049 R		        jmp dword PTR cs:wektor9  ; sko
					k do oryginalnej procedury obslugi prze
					rwania zegarowego 
      60				 
      61 0049  ????????			        wektor9 dd ? 
      62 004D				    obsluga_przerwan ENDP 
      63				    ;==================================
					========================== 
      64 004D				    zacznij: 
      65 004D  B0 00			        mov al, 0 ; video mode 
      66 004F  B4 05			        mov ah, 5 
      67 0051  CD 0A			        int 10 
      68				 
      69 0053  B8 0000			        mov ax, 0 
      70 0056  8E D8			        mov ds,ax ; zerowanie rejestru 
					DS 
      71 0058  66| A1 0024		        mov eax, ds:[36] ; adres fizycz
					ny 0*16 + 36 = 36 
      72 005C  2E: 66| A3 0049 R	        mov cs:wektor9, eax 
      73				 
      74				        ; wpisanie do wektora nr 8 adre
					su procedury 'obsluga_zegara' 
      75 0061  B8 ---- R		        mov ax, SEG obsluga_przerwan ; 
					czƒô≈õƒá segmentowa adresu 
      76 0064  BB 0032 R		        mov bx, OFFSET obsluga_przerwan
					 ; offset adresu 
      77				 
      78 0067  FA			        cli  
      79				        ; zapisanie adresu procedury do
					 wektora nr 9 
      80 0068  89 1E 0024		        mov ds:[36], bx  
      81 006C  A3 0026			        mov ds:[38], ax  
      82 006F  FB			        sti  
      83				 
      84				        ; oczekiwanie na naci≈õniƒôcie 
					klawisza 'x' 
      85 0070				        aktywne_oczekiwanie: 
      86 0070  B4 01			            mov ah,1 
      87 0072  CD 16			            int 16H ; funkcja INT 16H (
					AH=1) BIOSu ustawia ZF=1 je≈õli naci≈õn
Microsoft (R) Macro Assembler Version 5.00                  1/10/24 22:30:23
                                                             Page     1-3


					iƒôto jaki≈õ klawisz 
      88 0074  74 FA			            jz aktywne_oczekiwanie 
      89				             
      90 0076  B4 00			            mov ah, 0 
      91 0078  CD 16			            int 16H ; odczytanie kodu A
					SCII naci≈õniƒôtego klawisza (INT 16H, 
					AH=0) do rejestru AL 
      92 007A  3C 78			            cmp al, 'x' ; por√≥wnanie z
					 kodem litery 'x' 
      93 007C  75 F2			            jne aktywne_oczekiwanie ; s
					kok, gdy inny znak 
      94				         
      95				         
      96 007E  2E: 66| A1 0049 R	        mov eax, cs:wektor9 ;odtworzeni
					e oryginalnej zawarto≈õci wektora nr 8 
      97				 
      98 0083  FA			        cli 
      99 0084  66| A3 0024		        mov ds:[36], eax ; przes≈Çanie 
					warto≈õci oryginalnej do wektora 8 w ta
					blicy wektor√≥w przerwa≈Ñ <==> cli i st
					i zabezpiecza p
     100 0088  FB			        sti 
     101				 
     102				        
     103				        ;przerwanie programu i zwr√≥cen
					ie kontroli do programu wywo≈ÇujƒÖcego 
     104 0089  B0 00			        mov al, 0 
     105 008B  B4 4C			        mov ah, 4CH 
     106 008D  CD 21			        int 21H 
     107				 
     108 008F				rozkazy ENDS 
     109 0000				        nasz_stos SEGMENT stack 
     110 0000  0080[			          db 128 dup (?) 
     111	    ??			
     112			 ]	
     113				
     114 0080				        nasz_stos ENDS 
     115				    END zacznij 
Microsoft (R) Macro Assembler Version 5.00                  1/10/24 22:30:23
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

NASZ_STOS  . . . . . . . . . . .  	32 Bit	0080	PARA	STACK	
ROZKAZY  . . . . . . . . . . . .  	16 Bit	008F	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

AKTYWNE_OCZEKIWANIE  . . . . . .  	L NEAR	0070	ROZKAZY

OBSLUGA_PRZERWAN . . . . . . . .  	N PROC	0032	ROZKAZY	Length = 001B

WEKTOR9  . . . . . . . . . . . .  	L DWORD	0049	ROZKAZY
WYSWIETL_AL  . . . . . . . . . .  	N PROC	0000	ROZKAZY	Length = 0032

ZACZNIJ  . . . . . . . . . . . .  	L NEAR	004D	ROZKAZY

@FILENAME  . . . . . . . . . . .  	TEXT  klawisze		


    112 Source  Lines
    112 Total   Lines
      9 Symbols

  50448 + 466096 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
